## 关于项目的一些思考
Q. 究竟啥是负载均衡啊？

A1. 一般来说负载均衡背后对应一个服务器农场,由这个负载均衡器来选择一个服务器的ip和port返回给客户端,避免了客户端直接和服务器进行交互,从而对服务器进行一个攻击(高频访问),保障了服务器的安全

同时负载均衡也可以降低客户端的一个等待时间,比如有多个客户端,这多个客户端可以通过负载均衡器快速得到可用的节点,如果这多个客户同时访问一个节点那么就会导致这个节点过载,影响客户端的体验

目前主流的负载均衡器都跑在客户端,客户端向负载均衡器发起请求,之后由负载均衡器来和真正的内网服务器农场通信

负载均衡器通过负载均衡调度算法,在内网服务器中选择一个服务器返回给客户端,这里就需要判断服务器的一个状态,防止其过载或失效导致应用程序的可靠性降低

项目中的负载均衡调度算法,是对每一个服务器农场中的服务器封装一个host_info类,里面保存了调用的一些属性,比如虚成功/失败,真实成功/失败,连续成功/失败的次数,同时维护一个时间戳,表示我们只关心一段时间服务器的状态

当客户端向负载均衡器发送请求时,由其向两个队列中通过相应的算法选择一个服务器的ip和port返回给客户端,同时对相应的host_info中的属性进行一个修改,修改完毕之后,根据配置文件中的比率来判断当前服务器是否过载,从而再对两个队列进行操作

Q. 负载均衡器分为静态和动态,是啥意思啊？

A1. 本项目是动态负载均衡调度,表示会考虑系统中每台服务器的一个运行状态,当然项目中判断状态的方法较为简单,只是根据相应的比率来判断是否过载

而静态负载均衡表示不会关注每台服务器的运行状态,其根据预先确定的计划去分配任务,这样有可能导致个别服务器严重过载,因为这个服务器的处理能力相对来说比较落后

动态负载均衡的算法一般都有最少连接,加权最少连接,基于资源和地理位置等相关算法,本项目中并没有统计服务器对应的客户端的链接数量,只是通过是否返回成功以及窗口来判断,这样是比较低效的

